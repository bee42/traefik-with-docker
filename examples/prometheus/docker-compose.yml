version: "3.0"

networks:
  monitoring:
    driver: overlay

services:
  cadvisor:
    image: google/cadvisor
    networks:
      - monitoring
    labels:
      - com.docker.stack.namespace=monitoring
    volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      labels: [com.docker.stack.namespace=monitoring]
      placement:
        constraints: [node.role == worker]

  node-exporter:
    image: basi/node-exporter:latest
    networks:
      - monitoring
    labels:
      - com.docker.stack.namespace=monitoring
    volumes:
      - /proc/host/proc
      - /sys/host/sys
      - /:/rootfs
      - /etc/hostname:/etc/host_hostname
    environments:
       - HOST_HOSTNAME=/etc/host_hostname
    command: [ "-collector.procfs /host/proc", "-collector.sysfs /host/sys", "-collector.filesystem.ignored-mount-points '^/(sys|proc|dev|host|etc)($|/)'", "--collector.textfile.directory /etc/node-exporter/", "--collectors.enabled='conntrack,diskstats,entropy,filefd,filesystem,loadavg,mdadm,meminfo,netdev,netstat,stat,textfile,time,vmstat,ipvs'" ]
    deploy:
      mode: global
      labels: [com.docker.stack.namespace=monitoring]
      placement:
        constraints: [node.role == worker]
  alertmanager:
    image: basi/alertmanager
    networks:
      - monitoring
    labels:
      - com.docker.stack.namespace=monitoring
    ports:
      - "9093:9093"
    environments:
      - SLACK_API=https://hooks.slack.com/services/TOKEN-HERE
      - LOGSTASH_URL=http://logstash:8080/
    command: ["-config.file=/etc/alertmanager/config.yml"]
    deploy:
      mode: replicated
      labels: [com.docker.stack.namespace=monitoring]
      placement:
        constraints: [node.role == manager]

   prometheus:
    build:
      context: .
    ports:
      - "9090:9090"
    image: 127.0.0.1:5000/bee42/prometheus:latest
    networks:
     - monitoring
    labels:
      - com.docker.stack.namespace=monitoring
    command: [ "-config.file=/etc/prometheus/prometheus.yml", "-storage.local.path=/prometheus",      "web.console.libraries=/etc/prometheus/console_libraries", "-web.console.templates=/etc/prometheus/consoles", "-alertmanager.url=http://alertmanager:9093"]
    deploy:
      mode: replicated
      labels: [com.docker.stack.namespace=monitoring]
      placement:
        constraints: [node.role == manager]

  grafana:
    image: basi/grafana
    networks:
     - monitoring
    labels:
      - com.docker.stack.namespace=monitoring
    ports:
      - "3000:3000"
    environments:
      - "GF_SERVER_ROOT_URL=http://grafana.${CLUSTER_DOMAIN}"
      - "GF_SECURITY_ADMIN_PASSWORD=$GF_PASSWORD"
      - "PROMETHEUS_ENDPOINT=http://prometheus:9090"
      - "ELASTICSEARCH_ENDPOINT=$ES_ADDRESS"
      - "ELASTICSEARCH_USER=$ES_USERNAME"
      - "ELASTICSEARCH_PASSWORD=$ES_PASSWORD"
    deploy:
      mode: replicated
      labels: [com.docker.stack.namespace=monitoring]
      placement:
        constraints: [node.role == manager]
