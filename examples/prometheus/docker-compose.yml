version: "3.0"

networks:
  monitoring:
    driver: overlay

services:
  cadvisor:
    image: google/cadvisor
    networks:
      - monitoring
    labels:
      - com.docker.stack.namespace=monitoring
    volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      labels: [com.docker.stack.namespace=monitoring]
      placement:
        constraints: [node.role == worker]

  node-exporter:
    image: basi/node-exporter:latest
    networks:
      - monitoring
    labels:
      - com.docker.stack.namespace=monitoring
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs:ro
      - /etc/hostname:/etc/host_hostname
    environment:
      - "HOST_HOSTNAME=/etc/host_hostname"
    command: [ "-collector.procfs", "/host/proc", "-collector.sysfs", "/host/sys", "-collector.filesystem.ignored-mount-points", '^/(sys|proc|dev|host|etc)($$|/)', "--collector.textfile.directory", "/etc/node-exporter/", "--collectors.enabled", "conntrack,diskstats,entropy,filefd,filesystem,loadavg,mdadm,meminfo,netdev,netstat,stat,textfile,time,vmstat,ipvs" ]
    deploy:
      mode: global
      labels: [com.docker.stack.namespace=monitoring]
      placement:
        constraints: [node.role == manager]

#  docker-exporter:
#    image: basi/socat:v0.1.0
#    networks:
#      - monitoring
#    labels:
#      - com.docker.stack.namespace=monitoring
#    ports:
#      - "4999:4999"
#    environment:
#      - IN=172.18.0.1:4999
#    deploy:
#      mode: global
#      labels: [com.docker.stack.namespace=monitoring]
#
  alertmanager:
    image: basi/alertmanager
    depends_on:
      - prometheus
    networks:
      - monitoring
    labels:
      - com.docker.stack.namespace=monitoring
    ports:
      - "9093:9093"
    environment:
      - SLACK_API=https://hooks.slack.com/services/${SLACK_TOKEN}
    command: ["-config.file=/etc/alertmanager/config.yml"]
    deploy:
      mode: replicated
      labels: [com.docker.stack.namespace=monitoring]
      placement:
        constraints: [node.role == manager]

  prometheus:
    build:
      context: .
    ports:
      - "9090:9090"
    image: 127.0.0.1:5000/bee42/prometheus:latest
    depends_on:
      - node-exporter
      - cadvisor
#      - docker-exporter
    networks:
     - monitoring
    labels:
      - com.docker.stack.namespace=monitoring
    command: [ "-config.file=/etc/prometheus/prometheus.yml", "-storage.local.path=/prometheus",      "-web.console.libraries=/etc/prometheus/console_libraries", "-web.console.templates=/etc/prometheus/consoles", "-alertmanager.url=http://alertmanager:9093"]
    deploy:
      mode: replicated
      labels: [com.docker.stack.namespace=monitoring]
      placement:
        constraints: [node.role == manager]

  grafana:
    image: basi/grafana
    depends_on:
      - prometheus
    networks:
     - monitoring
    labels:
      - com.docker.stack.namespace=monitoring
    ports:
      - "3000:3000"
    environment:
      - "GF_SERVER_ROOT_URL=http://127.0.0.1.3000"
      - "GF_SECURITY_ADMIN_PASSWORD=${GF_PASSWORD}"
      - "GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource"
      - "PROMETHEUS_ENDPOINT=http://prometheus:9090"
    deploy:
      mode: replicated
      labels: [com.docker.stack.namespace=monitoring]
      placement:
        constraints: [node.role == manager]
